/* ------------------ Testimonial Text Effect */

const mediaQuery = window.matchMedia("(min-width: 768px)");

// chars can be changed to just be letters or include symbols, numbers etc

const chars =
  "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@Â£$%^&*()_+-={}[];':|,./<>?";

let charCount = 20;

// assignment of multiple variables at once

const randomChar = () => chars[Math.floor(Math.random() * (chars.length - 1))],
  randomString = length => Array.from(Array(length)).map(randomChar).join("");

const card = document.getElementById("js-blank-card"),
  letters = document.getElementById("js-letters");

// if there is a card on the page

if (card) {
  // on click, generate a new string and change some styles

  card.onclick = () => {
    letters.innerText = randomString(charCount);
    letters.style.opacity = 1;
    letters.style.color = "var(--clr-accent-600)";
  };

  // when you exit hover, the opacity fades out and the color changes back

  card.onmouseleave = () => {
    letters.style.opacity = "";
    letters.style.color = "";
  };

  // only add an event listener for screen resize if the page actually includes testimonials

  mediaQuery.addListener(screenSizer);

  // also ensures a string is generated by default

  screenSizer(mediaQuery);
}

function screenSizer(e) {
  // if we are above a certain screensize, increase the count
  e.matches ? (charCount = 100) : (charCount = 20);

  // and regenerate the string

  letters.innerText = randomString(charCount);
}

/* ------------------ Mobile Navigation */

const navigationMobileMenu = document.getElementById("js-mobile-header");
const navigationBurger = document.getElementById("js-nav-burger");
const navigationClose = document.getElementById("js-nav-close");

navigationBurger.onclick = () => {
  navigationMobileMenu.style.right = 0;
};

navigationClose.onclick = () => {
  navigationMobileMenu.style.right = "";
};

// Typing Animation

const wantedCopy = ["sit dolor.", "ipsum amet.", "adipisicing."];
const typingElement = document.getElementById("js-typing");
const typingSpeed = 200;

let i;

const deleteCharacter = () => {
  if (typingElement.innerHTML.length > 0) {
    typingElement.innerHTML = typingElement.innerHTML.slice(0, -1);
    setTimeout(deleteCharacter, typingSpeed);
  } else {
    setTimeout(
      () => typeCharacter((i = 0), Math.floor(Math.random() * 3)),
      300
    );
  }
};

const typeCharacter = (i, index) => {
  // while i is smaller than the length of the word

  if (i < wantedCopy[index].length) {
    // add the current character
    typingElement.innerHTML += wantedCopy[index][i];
    i++;
    // add delay
    setTimeout(() => typeCharacter(i, index), typingSpeed);
  } else {
    setTimeout(() => deleteCharacter(), 800);
  }
};

if (typingElement.innerHTML !== "") deleteCharacter();

if (typingElement.innerHTML === "") typeCharacter();
